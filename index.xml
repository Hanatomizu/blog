<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hanatomizu | Secret Base</title>
    <link>https://hanatomizu.github.io/blog/</link>
    <description>Recent content on Hanatomizu | Secret Base</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Aug 2025 22:31:47 +0800</lastBuildDate>
    <atom:link href="https://hanatomizu.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python基础语法学习笔记</title>
      <link>https://hanatomizu.github.io/blog/post/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 07 Aug 2025 10:46:24 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/post/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;div class=&#34;pdf-container&#34;&gt;&#xA;  &lt;object data=&#34;https://hanatomizu.github.io/blog/post/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/content.pdf&#34; type=&#34;application/pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;&gt;&#xA;    &lt;p&gt;您的浏览器不支持PDF预览，&#xA;      请&lt;a href=&#34;https://hanatomizu.github.io/blog/post/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/content.pdf&#34;&gt;点击下载文件&lt;/a&gt;&#xA;    &lt;/p&gt;&#xA;  &lt;/object&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .pdf-container { &#xA;     &#xA;    margin: 1.5rem 0;&#xA;    border-radius: 5px;&#xA;    overflow: hidden;&#xA;  }&#xA;  .pdf-download {&#xA;    text-align: center;&#xA;    padding: 10px;&#xA;     &#xA;     &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>关于 解析几何初步 椭圆 的一些奇技淫巧</title>
      <link>https://hanatomizu.github.io/blog/post/%E5%85%B3%E4%BA%8E-%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E5%88%9D%E6%AD%A5-%E6%A4%AD%E5%9C%86-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</link>
      <pubDate>Sat, 02 Aug 2025 22:32:01 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/post/%E5%85%B3%E4%BA%8E-%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E5%88%9D%E6%AD%A5-%E6%A4%AD%E5%9C%86-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本文章处于未完工状态（WIP）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;规定&#34;&gt;规定&lt;/h3&gt;&#xA;&lt;p&gt;椭圆中 $a$ 为半长轴，$b$ 为半短轴，$c$ 为半焦距，满足 $a^2 = b^2 + c^2$&#xA;椭圆方程为：$\displaystyle\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1$&lt;br&gt;&#xA;斜线方程为：$f(x) = kx + m$&lt;br&gt;&#xA;斜率的公式为：$\displaystyle k = \frac{y - y_1}{x - x_1}$&lt;br&gt;&#xA;斜线与椭圆交于 $A(x_1, y_1)$, $B(x_2, y_2)$ 两点&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;&#xA;&lt;p&gt;&lt;del&gt;证明先放着&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;$$\displaystyle |AB| = \sqrt{1+k^2}|x_2 - x_1| = \sqrt{1 + \frac{1}{k^2}}|y_2 - y_1|$$&lt;/p&gt;&#xA;&lt;p&gt;$$\displaystyle |x_2 - x_1| = \frac{\sqrt{ -4(-a^2b^2)(b^2+a^2k^2 - m^2) }}{|b^2 + a^2k^2|}$$&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;解题基本思路&#34;&gt;解题基本思路&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;通过斜线 $l_{AB}$, 联立方程&#xA;&lt;details&gt;&#xA;  &lt;summary&gt;具体过程&lt;/summary&gt;&#xA;  &lt;p&gt;&lt;/p&gt;&#xA;  &lt;blockquote&gt;&#xA;&lt;p&gt;联立椭圆方程和斜线方程&lt;br&gt;&#xA;$$\displaystyle&#xA;\begin{cases}&#xA;\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1 \newline&#xA;y = kx + m&#xA;\end{cases}$$&#xA;椭圆方程同乘 $a^2b^2$ 得到&lt;br&gt;&#xA;$$\displaystyle&#xA;\begin{cases}&#xA;b^2x^2 + a^2y^2 = a^2b^2 \newline&#xA;y = kx + m&#xA;\end{cases}$$&#xA;将 $y$ 带入&lt;br&gt;&#xA;$$\displaystyle b^2x^2 + a^2(kx+m)^2 = a^2b^2$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>ABC416C Concat(X Th) 题解</title>
      <link>https://hanatomizu.github.io/blog/post/abc416c-concatx-th-%E9%A2%98%E8%A7%A3/</link>
      <pubDate>Sat, 02 Aug 2025 12:13:00 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/post/abc416c-concatx-th-%E9%A2%98%E8%A7%A3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc416/tasks/abc416_c&#34;&gt;题目传送门 ABC416C&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-思路&#34;&gt;0x01 思路&lt;/h3&gt;&#xA;&lt;p&gt;注意到数据范围 \(1 \leq N \leq 10\), \(1 \leq K \leq 5\)，可以考虑直接 dfs 暴力枚举每一种组合。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-复杂度分析&#34;&gt;0x02 复杂度分析&lt;/h3&gt;&#xA;&lt;p&gt;dfs 内枚举 $n$ 个字符串，深度为 \(K\)，复杂度 \(O(N^K)\)。找第 $x$ 小的可以使用 &lt;code&gt;nth_element()&lt;/code&gt;，线性复杂度。故总复杂度为 \(O(N^K)\)。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-示例代码&#34;&gt;0x03 示例代码&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; ll &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;umax&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;x, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y) {(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; y) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y);}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;umin&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;x, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y) {(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; y) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y);}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n, k, x;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; s;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string re[&lt;span style=&#34;color:#ae81ff&#34;&gt;100005&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; cnt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; deps, string ss) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (deps &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; re[&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;cnt] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ss, &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;(); }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dfs(deps&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, ss&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;s[i]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;signed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#ifdef HANATOMIZU_LOCAL_TEST&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    freopen(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input.in&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, stdin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#endif &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// HANATOMIZU_LOCAL_TEST&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ios&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;sync_with_stdio(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), cin.tie(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), cout.tie(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; x;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    s.resize(n&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; s[i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dfs(k, string());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nth_element(re&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, re&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;x, re&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cnt&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; re[x] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kupc2021_c题解</title>
      <link>https://hanatomizu.github.io/blog/post/kupc2021_c%E9%A2%98%E8%A7%A3/</link>
      <pubDate>Mon, 16 Sep 2024 14:50:02 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/post/kupc2021_c%E9%A2%98%E8%A7%A3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/kupc2021/tasks/kupc2021_c&#34;&gt;题目传送门&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;首先根据题目可以知道：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在最优解的情况下第 $i$ 个硬币在第 $i$ 个游戏机（题中的 Gacha）中使用。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;题中 $B_j &amp;lt; B_{j+1} (1 \leq j \leq N-1)$ 可以得到。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;整个移动过程可以视作为从 $0$ 开始向正方向移动，得到若干硬币后走回去玩没有玩的游戏机。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;得出了以上结论，dp 的思路就清晰了。&lt;/p&gt;&#xA;&lt;p&gt;设 $dp_i$ 为玩了前 $i$ 个游戏机时 $B_i$ 的最小值，$m$ 为玩了前 $i$ 个游戏机的迂回成本最小值。得到状态转移方程：&#xA;$$m \gets \min(m, dp_{i-1} - A_i \times 2)$$&#xA;$$dp_i \gets \min(m, dp_{i-1} + B_i \times 2) + B_i \times 2$$&lt;/p&gt;&#xA;&lt;p&gt;值得注意的是，对于 $A_i &amp;gt; B_i$ 的情况（即硬币在游戏机前面），可以直接忽略该硬币，把硬币的位置设置为游戏机的位置（即 $A_i \to B_i$）。因为在去往游戏机的路上一定会捡到该硬币。&lt;/p&gt;&#xA;&lt;p&gt;得到答案为：&#xA;$$&#xA;ans = \min(dp_n) + \min_{0 \leq i &amp;lt; n}(dp_i + B_n - A_{i+1}) + A_n&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lorem_ipsum</title>
      <link>https://hanatomizu.github.io/blog/post/lorem_ipsum/</link>
      <pubDate>Sat, 27 Apr 2024 10:04:23 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/post/lorem_ipsum/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vel vehicula ligula, faucibus pulvinar nisl. Curabitur molestie dui in porttitor elementum. Aliquam sed cursus mi. Ut fermentum metus non volutpat ultricies. Cras quis pulvinar nisi. Integer tempor tortor erat, ac eleifend orci faucibus quis. Donec pretium scelerisque urna et volutpat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum elit odio, eleifend quis arcu vitae, feugiat pretium nisl. Morbi fringilla augue enim, vitae egestas massa dapibus ac. Nullam posuere aliquet scelerisque.&lt;/p&gt;</description>
    </item>
    <item>
      <title>readme</title>
      <link>https://hanatomizu.github.io/blog/readme/</link>
      <pubDate>Sat, 27 Apr 2024 09:56:04 +0800</pubDate>
      <guid>https://hanatomizu.github.io/blog/readme/</guid>
      <description>&lt;h2 id=&#34;hello-here-is-chinen-natsuyo&#34;&gt;👋Hello! Here is Chinen Natsuyo&lt;/h2&gt;&#xA;&lt;p&gt;I am &lt;strong&gt;Chinen Natsuyo&lt;/strong&gt;, an OIer from lz&lt;/p&gt;&#xA;&lt;p&gt;You can call me by my nickname &lt;strong&gt;Hanatomizu&lt;/strong&gt;, &lt;strong&gt;Chinen Natsuyo&lt;/strong&gt; or &lt;strong&gt;Summer&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;toolchain&#34;&gt;Toolchain&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;💻&lt;strong&gt;Arch Linux&lt;/strong&gt;: Operating System&lt;/li&gt;&#xA;&lt;li&gt;🖥️&lt;strong&gt;KDE Plasma&lt;/strong&gt;: Desktop Environment&lt;/li&gt;&#xA;&lt;li&gt;⌨️&lt;strong&gt;Visual Studio Code&lt;/strong&gt;: Code editor&lt;/li&gt;&#xA;&lt;li&gt;🖊️&lt;strong&gt;Kate&lt;/strong&gt;: Text Editor&lt;/li&gt;&#xA;&lt;li&gt;📰&lt;strong&gt;Hugo&lt;/strong&gt;: Blog Framework&lt;/li&gt;&#xA;&lt;li&gt;📝&lt;strong&gt;Obsidian&lt;/strong&gt;: Notes&lt;/li&gt;&#xA;&lt;li&gt;🎛️&lt;strong&gt;Git&lt;/strong&gt;: Version Control&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;contact-me&#34;&gt;Contact me&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;📧&lt;strong&gt;Email&lt;/strong&gt;: &lt;a href=&#34;mailto:chart11from21@outlook.com&#34;&gt;chart11from21@outlook.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;在太阳西斜的这个世界里，置身天上之森。等这场战争结束之后，不归之人与望眼欲穿的众人， 人人本着正义之名，长存不灭的过去、逐渐消逝的未来。我回来了，纵使日薄西山，即便看不到未来，此时此刻的光辉，盼君勿忘.&lt;/p&gt;&#xA;&lt;p&gt;――――世界上最幸福的女孩&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
